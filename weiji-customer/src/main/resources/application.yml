server:
  port: 7001
  servlet:
    context-path: /consumer
spring:
  application:
    name: weiji-consumer
eureka:
  client:
    service-url:
       defaultZone: http://eureka6001.com:6001/eureka/eureka
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true     #访问路径可以显示IP地址
feign:
  hystrix:
    enabled: true #开启熔断
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true #是否开始超时熔断，如果为false，则熔断机制只在服务不可用时开启，默认为true
        isolation:
          thread:
            timeoutInMilliseconds: 11000 #设置超时熔断时间 默认为1000毫秒
weiji-service:
  ribbon:
    #BestAvailableRule #最空闲连接策略 RandomRule #随机 / RoundRobinRule #轮询 / RetryRule #重试 / WeightedResponseTimeRule #响应时间权重
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    ConnectTimeout: 5000 #请求连接超时时间 默认1000毫秒
    ReadTimeout: 5000 #请求处理的超时时间 默认1000毫秒
    OkToRetryOnAllOperations: true #对所有请求都进行重试
    MaxAutoRetries: 1 #对当前实例的重试次数
    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
# Hystrix和Ribbon超时配置注意：
# 1. 因为Feign的请求是Hystrix+Ribbon。Hystrix在最外层，然后再到Ribbon，最后里面的是http请求。所以说。Hystrix的熔断时间必须大于Ribbon的 ( ConnectTimeout + ReadTimeout )
# 2. 如果Ribbon开启了重试机制，还需要乘以对应的重试次数，保证在Ribbon里的请求还没结束时，Hystrix的熔断时间不会超时。
